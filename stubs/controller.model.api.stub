<?php

namespace {{ namespace }};

use {{ namespacedModel }};
use {{ rootNamespace }}Http\Controllers\Controller;
use {{ namespacedRequests }}
use Illuminate\Http\Request;
use Illuminate\Http\JsonResponse;

class {{ class }} extends Controller
{
    /**
     * Display a listing of the resource.
     */
    public function index(Request $request): JsonResponse
    {
        $model = QueryBuilder::for({{ model }}::class)
            ->allowedSorts(['id', 'created_at']);

		return response()->json($model->paginate(perPage: $request->perPage());

    }

    /**
     * Store a newly created resource in storage.
     */
    public function store({{ storeRequest }} $request): JsonResponse
    {
        return response()->json({{ model }}::create($request->validated()));
    }

    /**
     * Display the specified resource.
     */
    public function show({{ model }} ${{ modelVariable }}): JsonResponse
    {
        return response()->json(${{ modelVariable }});
    }

    /**
     * Update the specified resource in storage.
     */
    public function update({{ updateRequest }} $request, {{ model }} ${{ modelVariable }}): JsonResponse
    {
        $data = tap($model,fn($model) => $model->update($request->valiated()));
		return response()->json($data);
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy({{ model }} ${{ modelVariable }}):JsonResponse
    {
        ${{ modelVariableName }}->delete();

		return response()->jsonResponse(message:'Item deleted');
    }
}
