<?php

namespace {{ namespace }};

use {{ namespacedModel }};
use {{ namespacedUserModel }};
use Illuminate\Auth\Access\Response;
use Illuminate\Auth\Access\HandlesAuthorization;
use App\Policies\BasePolicy;

class {{ class }} extends BasePolicy
{
    use HandlesAuthorization;

    /**
     * @var string
     */
    protected string $model = {{ model }}::class;

    /**
     * Determine whether the user can view any models.
     */
    public function viewAny({{ user }} $user): Response
    {
        return $this->check(__FUNCTION__);
    }

    /**
     * Determine whether the user can view the model.
     */
    public function view({{ user }} $user, {{ model }} ${{ modelVariable }}): Response
    {
        return $this->check(__FUNCTION__, ${{ modelVariable }});
    }

    /**
     * Determine whether the user can create models.
     */
    public function create({{ user }} $user): Response
    {
        return $this->check(__FUNCTION__);
    }

    /**
     * Determine whether the user can update the model.
     */
    public function update({{ user }} $user, {{ model }} ${{ modelVariable }}): Response
    {
        return $this->check(__FUNCTION__, ${{ modelVariable }});
    }

    /**
     * Determine whether the user can delete the model.
     */
    public function delete({{ user }} $user, {{ model }} ${{ modelVariable }}): Response
    {
        return $this->check(__FUNCTION__, ${{ modelVariable }});
    }

    /**
     * Determine whether the user can restore the model.
     */
    public function restore({{ user }} $user, {{ model }} ${{ modelVariable }}): Response
    {
        return $this->check(__FUNCTION__, ${{ modelVariable }});
    }

    /**
     * Determine whether the user can permanently delete the model.
     */
    public function forceDelete({{ user }} $user, {{ model }} ${{ modelVariable }}): Response
    {
        return $this->check(__FUNCTION__, ${{ modelVariable }});
    }
}
